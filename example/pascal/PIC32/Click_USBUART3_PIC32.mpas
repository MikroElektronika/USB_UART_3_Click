{*
Example for USBUART3 Click

    Date          : maj 2018.
    Author        : Katarina Perendic

Test configuration PIC32 :
    
    MCU                : P32MX795F512L
    Dev. Board         : EasyPIC Fusion v7
    PIC32 Compiler ver : v4.0.0.0

---

Description :

The application is composed of three sections :

- System Initialization - Intializes UART module
- Application Initialization - Driver intialization
- Application Task - (code snippet) - Checks if new data byte have received in rx buffer (ready for reading),
  and if ready than reads one byte from rx buffer. In second case aplication task writes
  message data via UART.

*}
program Click_USBUART3_PIC32;

uses Click_USBUART3_types, Click_USBUART3_config;

const
    MESSAGE_DATA : array[9] of uint8_t = ('M', 'i', 'k', 'r', 'o', 'E', 13, 10, 0); 
    
procedure systemInit(); 
begin

    mikrobus_uartInit(_MIKROBUS1, @_USBUART3_UART_CFG[0]); 
    mikrobus_logInit(_MIKROBUS1, 9600); 
    Delay_ms(100); 

end;

procedure applicationInit(); 
begin

    usbuart3_uartDriverInit(T_USBUART3_P(@_MIKROBUS1_GPIO), T_USBUART3_P(@_MIKROBUS1_UART)); 
    mikrobus_logWrite('Initialized', _LOG_LINE); 
    Delay_ms(100); 

end;

procedure applicationTask(); 
var
    tmp : char;
    rdyFlag : uint8_t;
begin

    rdyFlag := usbuart3_byteReady(); 
    if ((1 = rdyFlag)) then 
    begin
        tmp := usbuart3_readByte(); 
        mikrobus_logWrite(@tmp, _LOG_BYTE); 
    end; 
{*    for tmp := 0 to 9-1 do 
    begin
        usbuart3_writeByte(MESSAGE_DATA[tmp]); 
        mikrobus_logWrite('MESSAGE SENT', _LOG_LINE); 
    end;
    Delay_ms(2000); 
*}
end;

begin

    systemInit(); 
    applicationInit(); 
    while (1) do 
    begin 
        applicationTask(); 
    end;

end.